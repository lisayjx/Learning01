React是什么?
React:用于构建用户界面的JavaScript库;
React的官网文档: https://zh-hans.reactjs.org/

React特点

声明式编程:
声明式编程是目前整个大前端开发的模式: Vue、React、Flutter、SwiftUl;
它允许我们只需要维护自己的状态，当状态改变时，React可以根据最新的状态去渲染我们的Ul界面;
0：img


组件化开发:
组件化开发页面目前前端的流行趋势，我们会将复杂的界面拆分成一个个小的组件;
如何合理的进行组件的划分和设计也是后面我会讲到的一个重点;
1：img


多平台适配:
2013年，React发布之初主要是开发Web页面;
2015年，Facebook推出了ReactNative，用于开发【移动端跨平台】;(虽然目前Flutter非常火爆，但是还是有很多公司在使用1ReactNative) ;
2017年，Facebook推出ReactVR，用于开发【虚拟现实Web应用程序】;(VR也会是一个火爆的应用场景);


React开发依赖三个包：
    开发React必须依赖三个库:
    react:      包含react所必须的核心代码
    react-dom:  react【渲染】在不同平台所需要的核心代码
    babel:      将jsx转换成React代码的工具
    因为浏览器默认不识别jsx代码，所以需要babel编译jsx代码编译成普通的js代码

    第一次接触React会被它繁琐的依赖搞蒙，居然依赖这么多东西:(直接放弃? )
    对于Vue来说，我们只是依赖一个vue.js文件即可，但是react居然要依赖三个包。
    其实呢，这三个库是【各司其职】的，目的就是让每一个库只单纯做自己的事情;
    在React的0.14版本之前是没有react-dom这个概念的，所有功能都包含在react里;

    为什么要进行拆分呢?原因就是react-native。
    react包中包含了react web和react-native所共同拥有的核心代码。
    react-dom针对web和native所完成的事情不同:
        √ web端: react-dom会将jsx最终渲染成真实的DOM，显示在浏览器中
        √ native端: react-dom会将jsx最终渲染成原生的控件（比如Android中的Button，iOS中的UIButton) .


Babel和React关系

babel是什么呢?
Babel，又名Babel.js。
是目前前端使用非常广泛的 编译器、转移器。
比如当下很多浏览器并 不支持ES6的语法，但是确实ES6的语法非常的简洁和方便，我们开发时希望使用它。
那么编写源码时我们就可以使用ES6来编写，之后通过Babel工具，将ES6转成大多数浏览器都支持的ES5的语法。
 
ES6+
React JSX语法         ===》都可以通过babel进行编译成js代码
TypeScript语法

React和Babel的关系:
默认情况下开发React其实可以不使用babel。
但是前提是我们自己使用React.createElement 来编写源代码，它编写的代码非常的繁琐和可读性差。
那么我们就可以直接编写jsx (JavaScript XML)的语法，并且让babel帮助我们转换成React.createElement,后续还会详细讲到;


如何添加这三个依赖：
所以，我们在编写React代码时，这三个依赖都是必不可少的。那么，如何添加这三个依赖:
方式一: 直接CDN引入    CDN是服务器里面有这三个包了
方式二: 下载后，添加本地依赖
方式三: 通过npm管理（后续脚手架再使用)

CDN链接：
<script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
