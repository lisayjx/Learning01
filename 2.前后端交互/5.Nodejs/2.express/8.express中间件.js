// ----------------1.什么是中间件  没错，本质上就是请求拦截器
// 中间件(Middleware ) ，特指[业务流程]的[中间处理]环节。

// 2.现实生活中的例子
// 在处理污水的时候，一般都要经过三个处理环节，从而保证处理过后的废水，达到排放标准。

// 污水-->    一级处理-->二级处理-->三级处理      -->达到排放标准

// 处理污水的这三个中间处理环节，就可以叫做中间件。

// 上一级的输出就是下一级的输入 就能把中间件连接起来了

//-----------------------2.Express中间件的调用流程
// 当一个请求到达Express的服务器之后，可以连续调用多个中间件，
// 从而对这次请求进行[预处理]。

// 客户端请求-->   express服务器(中间件1-->中间件2-->中间件3)       -->处理完毕相应这次请求



//----------------------3.Express中间件的格式
// Express 的中间件，本质上就是一个function处理函数
// Express 中间件的格式如下:
const express = require('express')
const app = express()


app.get('/', function (req, res, next) {//说明形参next是个函数
    next()
})

// app.listen(3000)
// get:请求方式
// '/':请求的url地址
// function:中间件处理函数(req, res, next)
// 注意:中间件函数的形参列表中，必须包含next 参数。
//      而路由处理函数中只包含req和res。

// ----区分路由处理函数和中间件处理函数:看看有没有形参 函数next

//---------------------4.函数next的作用
// next函数是实现多个中间件 连续调用 的关键，
// 它表示把流转关系转交给下一个中间件或路由。
//相当于连接 的东西

                                 // next()     next()      next()
// 客户端请求--> express服务器(中间件1-->中间件2-->中间件3)  -->处理完毕相应这次请求