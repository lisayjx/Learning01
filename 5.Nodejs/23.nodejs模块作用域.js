// 1.什么是模块作用域
// 和函数作用域类似，在自定义模块中定义的变量、方法等成员，
// 只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域。

// 例如：

//------------1.js----------------------------
const custom = require('./2.js')

//输出{}空对象
// 在此页面中无法访问到1.js模块中的私有成员
// console.log(custom);
//----------------------------------------


//------------2.js----------------------------
//在模块作用域定义常量name，和函数sayHI
const name='lisa'
const sayHI(){
    console.log('大家好我是+'name);
}
//----------------------------------------

//---------------------------------------------------------------------------------------

2.模块作用域的好处
防止了全局变量污染的问题

// index页面引入了1和2页面
// 此时可以打印出lisa，把变量都声明到了window身上，会造成全局污染

例如：

//-----------index.js-------------------
// 引入1和2页面
console.log(name);
//--------------------------------------

//------------1.js----------------------------
 var name='zs'
//----------------------------------------


//------------2.js----------------------------
var name='lisa'
//----------------------------------------

//总结：意思是不会暴露变量和方法，并且不能修改可以调用

